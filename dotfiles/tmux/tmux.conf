############################################
###       THIS CONFIG IS SYMLINKED       ###
###    DONT' ENTER ANY SENSITIVE INFO    ###
###                                      ###
###  USE LOCAL CONFIG FOR MODIFICATIONS  ###
### UNLESS CHANGES WILL BECOME PERMANENT ###
############################################


###############################################################################
##################################   NOTES   ##################################
###############################################################################
###
### 1) Flag -n indicates that the combo can be used without prefix being send
### 2) Flag -r indicates this key may repeat
###
###############################################################################



###############################################################################
##############################   GENERAL SETUP   ##############################
###############################################################################

### Don't rename windows automatically
set-option -g allow-rename off


### Time for repeating of a hotkey with '-r' flag without having to type the prefix again; default: 500
set-option -g repeat-time 1000


### Start window numbering at 1
set -g base-index 1


### Automatically re-number windows after one of them is closed.
set -g renumber-windows on


### the scrollback history limit to make
set -g history-limit 1000000


### Allow use of the mouse with all functionality
set -g mouse on


### Stay in copy mode on mouse drag end. Press Enter to put selection into clipboard
unbind-key -T copy-mode-vi MouseDragEnd1Pane


### Use vim key layout in copy mode
setw -g mode-keys vi


### Don't wrap searches; it's super confusing given tmux's reverse-ordering of position info in copy mode.
set-option -w -g wrap-search off



###############################################################################
################################   SHORTCUTS   ################################
###############################################################################

### Although Control-B is a defaut prefix, but there are some encoding problems
# for it on Mac in iTerm
#set -g prefix C-Space
set -g prefix ^b


#### Entering copy mode
# Double prefix for entering copy mode
bind C-b copy-mode
#bind C-Space copy-mode; unbind [


### Vertical and horizontal split using mnemonics and stay in the same location
# with ['v', '|', '\'] and ['h', '-'] (for vertical and horizontal) in prefix mode.
# Unbind default
bind -r '\' split-window -h -c "#{pane_current_path}"; unbind '"'
bind -r | split-window -h -c "#{pane_current_path}"; unbind '"'
bind -r - split-window -v -c "#{pane_current_path}"; unbind '%'


### Remap 'Prefix-c' to create new window and stay in the same location
unbind c; bind c new-window -c '#{pane_current_path}'


### Resize panes '^-Shift-Arrow' without prefix. Unbind default
bind -n C-S-Up resize-pane -U 2;     unbind M-Up;    unbind C-Up
bind -n C-S-Down resize-pane -D 2;   unbind M-Down;  unbind C-Down
bind -n C-S-Left resize-pane -L 10;  unbind M-Left;  unbind C-Left
bind -n C-S-Right resize-pane -R 10; unbind M-Right; unbind C-Right


### Pane movement
# Smart pane switching with awareness of Vim splits.
# using 'Shift-arrow' keys without prefix for switching panes
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'S-Left' if-shell "$is_vim" 'send-keys S-Left'  'select-pane -L'
bind-key -n 'S-Down' if-shell "$is_vim" 'send-keys S-Down'  'select-pane -D'
bind-key -n 'S-Up' if-shell "$is_vim" 'send-keys S-Up'  'select-pane -U'
bind-key -n 'S-Right' if-shell "$is_vim" 'send-keys S-Right'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'S-Left' select-pane -L
bind-key -T copy-mode-vi 'S-Down' select-pane -D
bind-key -T copy-mode-vi 'S-Up' select-pane -U
bind-key -T copy-mode-vi 'S-Right' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Restore '^-l' for clearing a screen, but needs to be used with prefix
# bind C-l send-keys 'C-l'

# Use 'Shift-arrow' keys without prefix for switching panes
# bind -n S-Up select-pane -U;
# bind -n S-Down select-pane -D;
# bind -n S-Left select-pane -L;
# bind -n S-Right select-pane -R;


### Window movement
# Allow default to be repeated
unbind p; bind -r p previous-window;
unbind n; bind -r n next-window;

# Use 'Shift-arrow' to switch windows without prefix
# bind -n S-Left  previous-window;
# bind -n S-Right next-window;

# Use 'Alt-arrow' to switch windows without prefix
bind -n M-Left  previous-window;
bind -n M-Right next-window;


### Faster renaming. No need to first erase the original name.
bind , command-prompt -p "(rename-window '#W')" "rename-window '%%'"
bind '$' command-prompt -p "(rename-session '#S')" "rename-session '%%'"


### Reload changes in tmux, handy
bind r source-file ~/.tmux.conf \; display "Configuration reloaded."

### Don't send 'tmux' to the background
# I'm tired of sending 'tmux' to background while trying to maximize current
# pane. Default mapping to zoom in is 'Ctrl-B + Z' (prefix-Z). So if I don't
# release 'Ctrl' before pressing 'Z', then 'tmux' will go into background.
# Why would you send tmux to a background anyway? :shrug:
bind C-z resize-pane -Z

### Order sessions in the tree view by name instead of an index
bind s choose-tree -Z -s -O name

###############################################################################
########################      LOCAL CONFIGURATION      ########################
###############################################################################
### Any other configurations are considered non-essential, since we don't
### always want to install plugins. Thus, anything else has to be specified
### on per machine basis, i.e. in ~/.tmux-local.conf
source-file ~/.tmux-local.conf


### Modify status bar when in prefix mode. Should stay here, so not to
# depend on configuration for a local theme.
set -g status-left "#{?client_prefix,#[fg=colour39] Prefix mode,} #[fg=colour232,bg=colour39,bold] #S #[fg=colour39,bg=colour240,nobold]#[fg=colour233,bg=colour240] #(whoami) #[fg=colour240,bg=colour235]#[fg=colour240,bg=colour235] #I:#P #[fg=colour235,bg=colour233,nobold]"

### Make active pane more visible. Take colors from vim color scheme.
### Typically background of inactive should be of the same color as equire to
### the CursorLine
## -> Colorscheme: Onedark, style 'warm'
## -> Active: #282c31
## -> Inactive (cursor line): #35373b
# set -g window-active-style      'bg=#282c31'
# set -g window-style             'bg=#35373b'
# set -g pane-border-style        'bg=#35373b fg=colour39'
# set -g pane-active-border-style 'bg=#35373b fg=colour39'

## -> Colorscheme: Catppuccin, style 'frappe'
## -> Active: #232634 or #292c3c
## -> Inactive (cursor line): #3B3F53 or #35373b
set -g window-active-style      'bg=#292c3c'
set -g window-style             'bg=#3B3F53'
set -g pane-border-style        'bg=#3B3F53 fg=colour39'
set -g pane-active-border-style 'bg=#3B3F53 fg=colour39'
