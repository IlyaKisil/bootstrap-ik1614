source ~/.config/nvim/init.vim
source ~/.config/nvim/general/settings.vim
source ~/.config/nvim/general/mappings.vim


" ---------------------------------------------------------------------------------------
" General settings
" ---------------------------------------------------------------------------------------
set showmode

" Enable native IJ insertion in Vim
set clipboard+=ideaput


" ---------------------------------------------------------------------------------------
" Plugins
" ---------------------------------------------------------------------------------------
set surround
set commentary
set argtextobj
set easymotion
set highlightedyank


" ---------------------------------------------------------------------------------------
" Plugin settings
" ---------------------------------------------------------------------------------------
let g:argtextobj_pairs="[:],(:),<:>"

" s{char}{char} to move to {char}{char}
"nmap s <Plug>(easymotion-overwin-f2)


" ---------------------------------------------------------------------------------------
" Idea specific settings
" ---------------------------------------------------------------------------------------
set ideajoin
"set ideastatusicon=gray
set idearefactormode=keep

" Sync IJ bookmarks and Vim marks
set ideamarks


" ---------------------------------------------------------------------------------------
" Mappings
"
" Need to keep bindings like in VIM as much as possible
" ---------------------------------------------------------------------------------------
""" NAVIGATION COMMANDS
map <S-Right> :action NextSplitter<CR>
map <S-Left>  :action PrevSplitter<CR>
map <C-S-L>   :action SplitVertically<CR>

map <TAB>   :action NextTab<CR>
map <S-TAB> :action PreviousTab<CR>


""" FZF LIKE COMMANDS: '<leader>f ...' (try to keep similar to 'fzf' bindings)
" Find Files. Equivalent to ':GFiles', ':Files'
nnoremap <C-P>      :action SearchEverywhere<CR>
nnoremap <leader>ff :action SearchEverywhere<CR>

" Find Commands and Actions. Equivalent to ':Commands' and ':CocList commands'
nnoremap <leader>fc :action GotoAction<CR>
nnoremap <leader>cc :action GotoAction<CR>

" Find Recent files. Equivalent to ':Buffers'
nnoremap <leader>fb :action RecentFiles<CR>

" Find words (available through different tabs). Equivalent to ':Lines', ':Rg' and ':SEARCH', however it is not a fuzzy search :cry:
nnoremap <leader>fr :action FindInPath<CR>
nnoremap <leader>fl :action FindInPath<CR>
nnoremap <leader>fs :action FindInPath<CR>


""" SHOW COMMANDS: '<leader>s ...'
" Show Documentation (although it says 'JavaDoc' should also work with other languages)
nnoremap <leader>sd :action QuickJavaDoc<CR>

" Show Paste (clipboard) history
nnoremap <leader>sp :action PasteMultiple<CR>


""" OPEN COMMANDS: '<leader>o ...'
" Open Terminal
nnoremap <leader>ot :action ActivateTerminalToolWindow<CR>
" Open Problems (Errors, Warning and etc. Basically linting results)
nnoremap <leader>op :action ActivateProblemsViewToolWindow<CR>


""" GIT COMMANDS: '<leader>g ...'
nnoremap <leader>gr :action Git.ResolveConflicts<CR>
nnoremap <leader>gd :action Compare.SameVersion<CR>


""" RUN COMMANDS:
nnoremap <leader>rr :action Run<cr>
nnoremap <leader>rc :action ChooseRunConfiguration<cr>


""" DEBUG COMMANDS:
nnoremap <leader>dd :action Debug<cr>
nnoremap <leader>dc :action ChooseDebugConfiguration<cr>
nnoremap <leader>db :action ToggleLineBreakpoint<cr>


""" DIAGNOSTICS COMMANDS:
nnoremap gn :action GotoNextError<cr>
nnoremap gk :action GotoPreviousError<cr>
nnoremap <leader>cd :action ActivateProblemsViewToolWindow<CR>
nnoremap <C-n>      :action ActivateProblemsViewToolWindow<cr>
nnoremap <C-k>      :action ActivateProblemsViewToolWindow<cr>
nnoremap <leader>ia :action ShowIntentionActions<CR>


""" INTELLISENSE COMMANDS: (try to keep similar to 'CoC' bindings)
nnoremap <leader>rn :action RenameElement<CR>
nnoremap <leader>rf :action RenameFile<cr>

nnoremap <leader>gi :action GotoImplementation<CR>

" Looks like go to declaration and to references is kinda the same within JetBrains
nnoremap <leader>gd :action GotoDeclaration<CR>
nnoremap <leader>gr :action GotoDeclaration<CR>

" Find Usages/References (shows in separate window with preview usage categories)
nnoremap <leader>fu :action FindUsages<cr>
" Show Usages/References (similar to 'FindUsages' but shows only names of files -> class -> function)
nnoremap <leader>su :action ShowUsages<cr>
