############################################
###       THIS CONFIG IS SYMLINKED       ###
###    DONT' ENTER ANY SENSITIVE INFO    ###
###                                      ###
###  USE LOCAL CONFIG FOR MODIFICATIONS  ###
### UNLESS CHANGES WILL BECOME PERMANENT ###
############################################

[color]
    ui = true
    iu = true
[user]
    name = Ilya Kisil
[push]
    default = current
[core]
    # excludesfile = ~/.gitignore-global
    editor = $EDITOR
[pull]
	rebase = false
[merge]
    log = true
    tool = vimdiff
    conflictstyle = diff3
[mergetool]
    prompt = false
[color "status"]
    added = yellow
    changed = green
    untracked = red
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[alias]
    cm = commit --message
    co = checkout
    s = status
    d = difftool
    l = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    unstage = reset HEAD --
    last = log -1 HEAD

    # Delete merged branches unless it is current or one of
    cleanmerged = "!git branch --merged | egrep -v \"^\\s*(\\*.*|master|main|dev|staging|prod|ilya)\\s*$\" | xargs git branch -d #"

    # Convert a shell command to a properly escaped command that you can use in as alias in .gitconfig
    quote-string = "!read -r l; printf \\\"!; printf %s \"$l\" | sed 's/\\([\\\"]\\)/\\\\\\1/g'; printf \" #\\\"\\n\" #"
    quote-string-undo = "!read -r l; printf %s \"$l\" | sed 's/\\\\\\([\\\"]\\)/\\1/g'; printf \"\\n\""

    # merge to always create a new commit object,
    # even if the merge could be performed with a fast-forward
    m = merge --no-ff

    # Show user defined alias list
    aliases = "!git config --get-regexp '^alias\\.' | cut -c 7- | sed 's/ / = /'"
[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
[url "ssh://git@github.com/"]
    insteadOf = https://github.com/
[include]
    path = ~/.gitconfig-local
