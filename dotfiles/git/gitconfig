############################################
###       THIS CONFIG IS SYMLINKED       ###
###    DONT' ENTER ANY SENSITIVE INFO    ###
###                                      ###
###  USE LOCAL CONFIG FOR MODIFICATIONS  ###
### UNLESS CHANGES WILL BECOME PERMANENT ###
############################################

[color]
    ui = true
    iu = true
[user]
    name = Ilya Kisil
[core]
    # enable Git to work better on filesystems that are not case sensitive, like FAT
    ignorecase = false
    # excludesfile = ~/.gitignore-global
    editor = $EDITOR
    # https://github.com/wfxr/forgit/issues/121#issuecomment-725811214
    # https://github.com/dandavison/delta/issues/368#issuecomment-751668990
    pager = "{                                                                      \
        DEFAULT_WIDTH='120'                                                         \
        COLUMNS=$(tput cols);                                                       \
        if [ $COLUMNS -ge $DEFAULT_WIDTH ] && [ -z $FZF_PREVIEW_COLUMNS ]; then     \
            delta --side-by-side -w $COLUMNS;                                       \
        elif [ $COLUMNS -ge $DEFAULT_WIDTH ] && [ ! -z $FZF_PREVIEW_COLUMNS ]; then \
            delta --side-by-side -w $FZF_PREVIEW_COLUMNS;                           \
        else                                                                        \
            delta;                                                                  \
        fi                                                                          \
    }"

[diff]
    colorMoved = default
; [blame]
;     NOTE: this requires file to be present in all repos
;     ignoreRevsFile = .git-blame-ignore-revs

[delta]
    navigate = true
    features = decorations

[delta "decorations"]
    commit-decoration-style = blue ol
    commit-style = raw
    file-style = omit
    hunk-header-decoration-style = blue box
    hunk-header-file-style = red
    hunk-header-style = file
    line-numbers = true
    minus-emph-style     = syntax "#E06C75"
    minus-non-emph-style = syntax "#374752"
    plus-non-emph-style  = syntax "#374752"
    # Style for git moved lines
    map-styles = "bold purple => syntax '#3A3A3A', bold cyan => syntax '#3A3A3A'"

[delta "interactive"]
    keep-plus-minus-markers = false

[interactive]
    diffFilter = delta --color-only --features=interactive

[init]
    # Name of a branch for every 'git init'
    defaultBranch = master
[push]
    default = current
[pull]
    rebase = false
[merge]
    log = true
    tool = vimdiff
    conflictstyle = diff3
[mergetool]
    prompt = false
[color "status"]
    added = yellow
    changed = green
    untracked = red
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[alias]
    cm = commit --message
    co = checkout
    s = status
    d = difftool
    l = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset' --abbrev-commit --date=format:'%Y-%m-%d %H:%M'
    unstage = reset HEAD --
    last = log -1 HEAD

    # Delete merged branches unless it is current or one of
    cleanmerged = "!git remote prune origin && git branch --merged | egrep -v \"^\\s*(\\*.*|master|main|dev|staging|prod)\\s*$\" | xargs git branch -d #"

    # Fixup a commit in the past selected with FZF
    fixup = "!git log -n 50 --pretty=format:'%h %s' --no-merges | grep -Ev '^[a-z0-9]{7} fixup!' | fzf | cut -c -7 | xargs -o git commit --fixup"

    # Convert a shell command to a properly escaped command that you can use in as alias in .gitconfig
    quote-string = "!read -r l; printf \\\"!; printf %s \"$l\" | sed 's/\\([\\\"]\\)/\\\\\\1/g'; printf \" #\\\"\\n\" #"
    quote-string-undo = "!read -r l; printf %s \"$l\" | sed 's/\\\\\\([\\\"]\\)/\\1/g'; printf \"\\n\""

    # merge to always create a new commit object,
    # even if the merge could be performed with a fast-forward
    m = merge --no-ff

    # Show user defined alias list
    aliases = "!git config --get-regexp '^alias\\.' | cut -c 7- | sed 's/ / = /'"
[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
[url "ssh://git@github.com/"]
    insteadOf = https://github.com/
[include]
    path = ~/.gitconfig-local
