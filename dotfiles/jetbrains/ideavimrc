" ---------------------------------------------------------------------------------------
" General settings
" ---------------------------------------------------------------------------------------
set showmode

" Enable native IJ insertion in Vim
set clipboard+=ideaput
" Copy to system wide clipboard
set clipboard+=unnamed

set number
set relativenumber

" Incremental search
set incsearch
" Highlighted search results
set hlsearch
" Use case insensitive search
set ignorecase
" Except when using capital letters
set smartcase

" When scrolling, keep cursor N lines away from screen border
" Better to keep greater then 'pumheight'
set scrolloff=8
set sidescroll=10

" ---------------------------------------------------------------------------------------
" Plugins
" ---------------------------------------------------------------------------------------
set surround
set commentary
set argtextobj
set easymotion
set highlightedyank


" ---------------------------------------------------------------------------------------
" Plugin settings
" ---------------------------------------------------------------------------------------
let g:argtextobj_pairs="[:],(:),<:>"

" s{char}{char} to move to {char}{char}
"nmap s <Plug>(easymotion-overwin-f2)


" ---------------------------------------------------------------------------------------
" Idea specific settings
" ---------------------------------------------------------------------------------------
set ideajoin
"set ideastatusicon=gray
set idearefactormode=keep

" Sync IJ bookmarks and Vim marks
set ideamarks


" ---------------------------------------------------------------------------------------
" Mappings
"
" Need to keep bindings like in VIM as much as possible
" ---------------------------------------------------------------------------------------
let mapleader="\<Space>"

" Don't move cursor
nnoremap <Space> <Nop>

" Map (redraw screen) to also turn off search highlighting until the next search
nnoremap <C-l> :nohl<CR><C-L>

" When you paste over something send that content to 'the black hole register'
vnoremap <leader>p "_dP

" Keep selection after tab adjust
vnoremap < <gv
vnoremap > >gv

" Convenience for applying macros
nnoremap Q @q

" Search mappings: These will make it so that going to the next one in a
" search will center on the line it's found in.
nnoremap n nzzzv
nnoremap N Nzzzv

" Same when moving up and down and jumping within locations list
noremap <C-d> <C-d>zz
noremap <C-u> <C-u>zz
noremap <C-o> <C-o>zz
noremap <C-i> <C-i>zz

"make Y consistent with C and D
nnoremap Y y$

" Move selection up and down. This will also respect indentation levels
" NOTE: Doesn't work nice :cry:
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv

" Add multiline movements to jumplist, so we can use <C-i> and <C-o>
" NOTE: Doesn't work :cry:
nnoremap <expr> k (v:count > 1 ? "m'" . v:count : '') . 'gk'
nnoremap <expr> j (v:count > 1 ? "m'" . v:count : '') . 'gj'


""" NAVIGATION COMMANDS:
map <S-Right> :action NextSplitter<CR>
map <S-Left>  :action PrevSplitter<CR>
map <C-S-L>   :action SplitVertically<CR>

map <TAB>   :action NextTab<CR>
map <S-TAB> :action PreviousTab<CR>

nnoremap gn :action GotoNextError<cr>
nnoremap gk :action GotoPreviousError<cr>
nnoremap <C-n> :action ActivateProblemsViewToolWindow<cr>
nnoremap <C-k> :action ActivateProblemsViewToolWindow<cr>

" Add multiline movements to jumplist, so we can use <C-i> and <C-o>
nnoremap <expr> k (v:count > 1 ? "m'" . v:count : '') . 'gk'
nnoremap <expr> j (v:count > 1 ? "m'" . v:count : '') . 'gj'

""" FIND COMMANDS: '<leader>f ...' (try to keep similar to 'fzf' bindings)
" Find Files. Equivalent to ':GFiles', ':Files'
nnoremap <C-P>      :action SearchEverywhere<CR>
nnoremap <leader>ff :action SearchEverywhere<CR>
" Find Commands. Equivalent to ':Commands'
nnoremap <leader>fc :action GotoAction<CR>
" Find Recent files. Equivalent to ':Buffers'
nnoremap <leader>fb :action RecentFiles<CR>
" Find words (available through different tabs). Equivalent to ':Lines', ':Rg' and ':SEARCH', however it is not a fuzzy search :cry:
nnoremap <leader>fr :action FindInPath<CR>
nnoremap <leader>fl :action FindInPath<CR>
nnoremap <leader>fs :action FindInPath<CR>
" Find Usages/References (shows in separate window with preview usage categories)
nnoremap <leader>fu :action FindUsages<cr>


""" SHOW COMMANDS: '<leader>s ...'
" Show Documentation (although it says 'JavaDoc' should also work with other languages)
nnoremap <leader>sd :action QuickJavaDoc<CR>
" Show Paste (clipboard) history
nnoremap <leader>sp :action PasteMultiple<CR>
" Show Usages/References (similar to 'FindUsages' but shows only names of files -> class -> function)
nnoremap <leader>su :action ShowUsages<cr>
" Show actions
nnoremap <leader>sa :action ShowIntentionActions<CR>


""" OPEN COMMANDS: '<leader>o ...'
" Open Terminal
nnoremap <leader>ot :action ActivateTerminalToolWindow<CR>
" Open Problems (Errors, Warning and etc. Basically linting results)
nnoremap <leader>op :action ActivateProblemsViewToolWindow<CR>
" Open compare window
nnoremap <leader>od :action Compare.SameVersion<CR>
" Open conflicts
nnoremap <leader>oc :action Git.ResolveConflicts<CR>


""" GOTO COMMANDS: '<leader>g ...'
nnoremap <leader>gt :action GotoTest<cr>
nnoremap <leader>gi :action GotoImplementation<CR>
" Looks like go to declaration and to references is kinda the same within JetBrains
nnoremap <leader>gd :action GotoDeclaration<CR>
nnoremap <leader>gr :action GotoDeclaration<CR>


""" RUN AND RENAME COMMANDS: '<leader>r ...'
nnoremap <leader>rr :action Run<cr>
nnoremap <leader>rc :action ChooseRunConfiguration<cr>
nnoremap <leader>rn :action RenameElement<CR>
nnoremap <leader>rf :action RenameFile<cr>


""" DEBUG COMMANDS: '<leader>d ...'
nnoremap <leader>dd :action Debug<cr>
nnoremap <leader>dc :action ChooseDebugConfiguration<cr>
nnoremap <leader>db :action ToggleLineBreakpoint<cr>


""" COC LIKE COMMANDS: '<leader>c ...'
" Similar to 'CocList diagnostics'
nnoremap <leader>cd :action ActivateProblemsViewToolWindow<CR>
" Find Actions. Equivalent to ':CocList commands'
nnoremap <leader>cc :action GotoAction<CR>
