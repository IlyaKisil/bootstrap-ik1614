#!/usr/bin/env bash
# vim: ft=sh

#####################################################
### Specific configurations for the local machine ###
###     This file is sourced by the ~/.zshrc      ###
###                                               ###
###     All aliases should go into dedicated      ###
###   file, i.e. ~/.aliases or ~/.aliases-local   ###
#####################################################

ZSH_CUSTOM="${HOME}/.config/zsh/custom"

###------------------------------    THEME   -------------------------------###
### Bundled with oh-my-zsh
#ZSH_THEME="agnoster"

### External theme for zsh
# Although it is not required, but Powerline10k can take advantage of Meslo Nerd Font
# https://github.com/romkatv/powerlevel10k#fonts
ZSH_THEME="powerlevel10k/powerlevel10k"

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r '${XDG_CACHE_HOME:-${HOME}/.cache}/p10k-instant-prompt-${(%):-%n}.zsh' ]]; then
  source '${XDG_CACHE_HOME:-${HOME}/.cache}/p10k-instant-prompt-${(%):-%n}.zsh'
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
P10K_CONFIG=${HOME}/.p10k.zsh
[[ ! -f ${P10K_CONFIG} ]] || source ${P10K_CONFIG}

# This is tailored specifically for the p10k
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#595858,bg=underline"



###-----------------------------    PLUGINS   ------------------------------###
ZSH_PLUGINS=(
    # tmux
    # zsh-autosuggestions  # Don't really like it. Better to use 'fzf'
    # gcloud               # Relies on google-sdk being in certain locations, e.g. $HOME
    docker
)

if command -v fzf 1>/dev/null 2>&1; then
    ZSH_PLUGINS=(${ZSH_PLUGINS} fzf)
    export FZF_DEFAULT_OPTS='--height 40% --inline-info --layout=reverse --border'
fi



###-----------------   ${PATH} EXPORTS USED IN ~/.zshrc   ------------------###
USER_BIN="${HOME}/bin"
LOCAL_BIN="${HOME}/.local/bin"

### Uncomment and correctly define these if you are going to be using this software
#MYSQL_BIN="/path/to/mysql/bin"
#LATEX_BIN=/path/to/tex/bin
#MATLAB_BIN=/path/to/matlab/bin
#CUDA_BIN=/usr/local/cuda/bin
#CUDA_LIB64_HOME=/usr/local/cuda/lib64
#CUDA_CUPTI_LIB64_HOME=/usr/local/cuda/extras/CUPTI/lib64


### Configurations for nodejs version manager (nvm)
# Change 'NVM_DIR' and 'NODE_VERSION' as required
# Note: when 'NODE_VERSION' is set we don't use NVM as is slows down opening a new shell
NVM_DIR="$HOME/.nvm"
NODE_VERSION="13.10.1"
NODE_BIN="${NVM_DIR}/versions/node/v${NODE_VERSION}/bin"


### Conda specific configuration (adaptation of contents which is managed by 'conda init')
### Uncomment and correctly define 'ANACONDA_HOME'
## >>> conda initialize >>>
#ANACONDA_HOME=/path/to/anaconda
#ANACONDA_BIN="${ANACONDA_HOME}/bin"
#__conda_setup="$('$ANACONDA_HOME/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
#if [[ $? -eq 0 ]]; then
#    eval "${__conda_setup}"
#else
#    if [[ -f "${ANACONDA_HOME}/etc/profile.d/conda.sh" ]]; then
#        . "${ANACONDA_HOME}/etc/profile.d/conda.sh"
#    fi
#fi
#unset __conda_setup
## <<< conda initialize <<<


### Configuration for Pyenv
PYENV_ROOT="${HOME}/.pyenv"
PYENV_BIN="${PYENV_ROOT}/bin"
PYENV_SHIMS="${PYENV_ROOT}/shims"
# Set to non-empty if you want to eval 'pyenv init'.
PYENV_INIT=""



###------------------------------    SECRETS   --------------------------------###
# Home for defining secrets. Use in conjunction with 'add-secret-environment-variable.sh'
# and 'load-secret-environment-variable.sh'
export ZSHENV_SECRETS=${HOME}/.zshenv-secrets

# Variables used by 'sync-settings' in ATOM. Uncomment and define these if in use
#export GITHUB_TOKEN=""  # Personal access token to GitHub which has the gist scope
#export GIST_ID=""       # Last part of url (after username) related to private gist with Atom dotfiles

