#@IgnoreInspection BashAddShebang

############################################
###       THIS CONFIG IS SYMLINKED       ###
###  USE LOCAL CONFIG FOR MODIFICATIONS  ###
### UNLESS CHANGES WILL BECOME PERMANENT ###
###                                      ###
### This file defines top level config   ###
### across all installations, so keep it ###
### generic, and ensure that absence of  ###
### local settings wouldn't crash system ###
###                                      ###
### Aliases should go in dedicated file  ###
### i.e. ~/.aliases or ~/.aliases-local  ###
############################################

# Path to your oh-my-zsh installation.
export ZSH=${HOME}/.oh-my-zsh

# Set name of the theme to load in !!! LOCAL ZSHRC !!!
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# ZSH_THEME="agnoster"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# This makes it easier to see which terminal you are using in jupyter lab
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="yyyy-mm-dd"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  colored-man-pages
  safe-paste
  vi-mode
  fzf-tab
)


###----------------------------    MAIN PART   -----------------------------###
# Most of the following variables are defined (should be defined) in the
# ~/.zshrc-local file. On the other hand, if they are not specified it
# should break anything.

### KEEP THIS AT THE TOP OF MAIN PART
# Source ~/.zshrc-local if it exists
ZSHRC_LOCAL=${HOME}/.zshrc-local
[[ ! -f ${ZSHRC_LOCAL} ]] || source ${ZSHRC_LOCAL}

# Source ~/.aliases if it exists
ALIASES=$HOME/.aliases
[[ ! -f ${ALIASES} ]] || source ${ALIASES}


### Set zsh plugins to use
plugins=(
  ${plugins}
  ${ZSH_PLUGINS:=""}
)


### Set PATH
export PATH=${MATLAB_BIN:=""}${PATH:+:${PATH}}
export PATH=${USER_BIN:=""}${PATH:+:${PATH}}
export PATH=${MYSQL_BIN:=""}${PATH:+:${PATH}}
export PATH=${LATEX_BIN:=""}${PATH:+:${PATH}}
export PATH=${RUST_BIN:=""}${PATH:+:${PATH}}

# Configurations for 'CUDA'
export PATH=${CUDA_BIN:=""}${PATH:+:${PATH}}
export LD_LIBRARY_PATH=${CUDA_LIB64_HOME:=""}${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
export LD_LIBRARY_PATH=${CUDA_CUPTI_LIB64_HOME:=""}${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}

# Configurations for python
export PATH=${ANACONDA_BIN:=""}${PATH:+:${PATH}}
export PATH=${LOCAL_BIN:=""}${PATH:+:${PATH}}
export PATH=${PYENV_BIN:=""}${PATH:+:${PATH}}


### Python specific configs
# pipenv
if command -v pipenv 1>/dev/null 2>&1; then
    export PIPENV_VENV_IN_PROJECT=1
    export PIPENV_VERBOSITY=-1
fi

# pyenv
if command -v pyenv 1>/dev/null 2>&1; then
    export PYENV_ROOT
    if [[ ! -z ${PYENV_INIT:=""} ]]; then
        # This will slow down opening a new shell
        eval "$(pyenv init -)"
    else
        export PATH=${PYENV_SHIMS:=""}${PATH:+:${PATH}}
    fi
fi


### Node specific configs
if [[ -z ${NODE_VERSION:=""} ]]; then
    # This considerably slows down opening a new shell
    export NVM_DIR
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
else
    # This will work after initial node setup of via NVM
    export PATH=${NODE_BIN:=""}${PATH:+:${PATH}}
fi

### Other variables
if command -v nvim 1>/dev/null 2>&1; then
    export EDITOR="$(which nvim)"
else
    export EDITOR="$(which vim)"
fi


### KEEP THIS AT THE BOTTOM AS MUCH AS POSSIBLE
source $ZSH/oh-my-zsh.sh

# For some reason OMZ, doesn't let you to set this var in a pluggable way
export HISTSIZE=100000
export SAVEHIST=100000
